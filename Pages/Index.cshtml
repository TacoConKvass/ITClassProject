@page "/"
@model ITClassProject.Pages.IndexModel
@{
	ViewData["Title"] = "Main";
	Layout = "_Layout";

}

<link rel="stylesheet" type="text/css" href="/css/main.css" />

<main id="main-content">
	<div style="width:80%; display:inline-flex; flex-direction:column; margin-bottom: 30px; justify-content:space-around;">
		<form autocomplete="off" id="add-quote-form" method="post">
			<h2 style="color:  rgba(0, 120, 255, 1); margin-top:50px;">SUBMIT QUOTE</h2>
			<div class="quote-input" style="flex-direction:column; align-items:center;">
				<textarea form="add-quote-form" name="source" placeholder="Source" maxlength="100" wrap="soft"  rows="1" cols="100" required style="width:95%;"></textarea> <br>
				<textarea form="add-quote-form" name="quote" placeholder="Quote..." maxlength="400" wrap="soft" rows="3" cols="100" required style="width:95%;"></textarea> <br>
				@{
					string imagePath = $"./images/cap{Model.random}.jpg";
					if (Model.currentUsername == "Guest")
					{
						<text>Captcha</text>

						<img src=@imagePath width="200" />
						<input type="text" id="captcha" name="Captcha" placeholder="" form="add-quote-form" required style="width:95%" oninput="onChange(event)"> <br>
					}
				}
			</div>
			<div class="submit-quote">
				@{
					if (Model.currentUsername == "Guest")
					{
						<input id="submit" type="submit" value="Submit" disabled />
					}
					else
					{
						<input id="submit" type="submit" value="Submit"/>
					}
				}
			</div>
			@Html.AntiForgeryToken()
		</form>
	</div>

	@{
		var quotesDbContext = ITClassProject.Database.Database.GetQuoteDbContext();
		var quotes = quotesDbContext.GetAllQuotes();
		quotes.Reverse();
		foreach (ITClassProject.Database.Models.Quote quote in quotes)
		{
			<div class="quote">
				<div class="quote-details">
					<text>Author: @quote.Author </text>
					<text> | </text>
					<text> Source: @quote.Source </text>
					@{
						if ((Model.currentUsername.ToString() == quote.Author && Model.currentUsername != "Guest") || Model.admin)
						{
							<text> | </text>
							<button onclick="onDelete(@quote.Id)">
								Delete
							</button>
						}
					}
				</div>

				<div class="quote-content">
					<text>
						"@quote.Content"
					</text>
				</div>
			</div>
		}
	}
</main>

<script>
	function onDelete(id) {
		var confirmed = confirm("Are you sure you want to delete this quote?")
		if (confirmed) {
			console.log(id)
			fetch(`/api/quote?id=${id}`, {
				method: 'DELETE'
			}).then(() => {
				window.location.href = "../"
			})
		}
	}
	function onChange(e) {
		if ("@Model.Captcha[Model.random-1]" === e.target.value) {
			document.getElementById("submit").disabled = false;
			document.getElementById("captcha").disabled = true;
		}
		else {
			document.getElementById("submit").disabled = true;
		}
	}

	if (window.history.replaceState) {
		window.history.replaceState(null, null, window.location.href);
	}
</script>